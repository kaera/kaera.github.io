{"version":3,"sources":["emails-input.ts"],"names":[],"mappings":"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","file":"emails-input.444dc99e.js","sourceRoot":"..","sourcesContent":["import './emails-input.css';\n\nexport interface EmailsInputAPI {\n    addEmail: (email: string) => void;\n    getEmailCount: () => number;\n}\n\ndeclare global {\n    interface Window {\n        EmailsInput: (rootNode: Element | null) => EmailsInputAPI;\n        clipboardData?: {\n            getData: (type: 'Text') => string;\n        };\n    }\n}\n\nfunction getClipboardText(\n    e: ClipboardEvent & { originalEvent?: ClipboardEvent | undefined },\n) {\n    const clipboardData = e.clipboardData || e.originalEvent?.clipboardData;\n    if (clipboardData) {\n        return clipboardData.getData('text/plain');\n    }\n    if (window.clipboardData) {\n        // IE11\n        return window.clipboardData.getData('Text');\n    }\n}\n\nfunction buildInput(addEmail: (value: string) => void) {\n    const flushInputValue = () => {\n        if (input.value) {\n            addEmail(input.value);\n        }\n        input.value = '';\n    };\n\n    const input = document.createElement('input');\n\n    input.setAttribute('placeholder', 'add more people...');\n    input.className = 'emails-input--input';\n    input.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter' || e.key === ',') {\n            e.preventDefault();\n            flushInputValue();\n        }\n    });\n    input.addEventListener('blur', flushInputValue);\n\n    input.addEventListener(\n        'paste',\n        (e: ClipboardEvent & { originalEvent?: ClipboardEvent }) => {\n            e.preventDefault();\n            flushInputValue();\n\n            const clipboardText = getClipboardText(e);\n            if (clipboardText) {\n                clipboardText.split(/[,\\s]+/).forEach(addEmail);\n            }\n        },\n    );\n    return input;\n}\n\nexport function EmailsInput(rootNode: Element | null) {\n    if (!rootNode) {\n        throw new Error('Missing root node');\n    }\n\n    if (rootNode.classList.contains('emails-input')) {\n        throw new Error(`EmailsInput is already initialized on ${rootNode}`);\n    }\n\n    let validEmailCount = 0;\n    const emails: {\n        [email: string]: {\n            num: number;\n            isValid: boolean;\n        };\n    } = {};\n\n    rootNode.classList.add('emails-input');\n    rootNode.addEventListener('click', (e) => {\n        const target = e.target as HTMLElement;\n        if (target.className === 'emails-input--remove-button') {\n            const emailTag = target.parentNode as Node;\n            const email = emails[target.dataset.value!];\n            email.num--;\n            if (email.num === 0) {\n                validEmailCount--;\n            }\n            rootNode.removeChild(emailTag);\n        } else {\n            input.focus();\n        }\n    });\n\n    const addEmail = (value: string): void => {\n        value = value.trim();\n        if (!value) {\n            return;\n        }\n\n        if (!(value in emails)) {\n            emails[value] = {\n                num: 0,\n                isValid: /^[^\\s,@]+@[^\\s,@]+$/.test(value),\n            };\n        }\n\n        const email = emails[value];\n        email.num++;\n        if (email.isValid && email.num === 1) {\n            validEmailCount++;\n        }\n\n        const emailTag = document.createElement('span');\n        emailTag.textContent = value;\n        emailTag.classList.add('emails-input--tag');\n        emailTag.classList.add(\n            email.isValid\n                ? 'emails-input--tag-valid'\n                : 'emails-input--tag-invalid',\n        );\n        const removeBtn = document.createElement('span');\n        removeBtn.className = 'emails-input--remove-button';\n        removeBtn.dataset.value = value;\n        emailTag.appendChild(removeBtn);\n        rootNode.insertBefore(emailTag, input);\n    };\n\n    const input = buildInput(addEmail);\n    rootNode.appendChild(input);\n\n    return {\n        addEmail,\n        getEmailCount: (): number => validEmailCount,\n    };\n}\nwindow.EmailsInput = EmailsInput;\n"]}